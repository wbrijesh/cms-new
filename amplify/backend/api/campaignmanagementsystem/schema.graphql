type Campaign @model @key(name: "byClient", fields: ["clientID"]) @auth(rules: [{allow: groups, groups: ["admin"], operations: [read, delete, update, create]}, {allow: groups, groups: ["adops"], operations: [read, create, update, delete]}, {allow: groups, groups: ["sales"], operations: [read, update]}]) {
  id: ID!
  clientID: ID
  name: String
  reference: String
  booking_type: String
  contact_person: String
  add_comm_type: String
  add_comm_value: Int
  instructions: String
  delivery_comments: String
  date_created: AWSDate
  date_modified: AWSDate
  status: String
  revenue_cpm: Boolean
  revenue_cpc: Boolean
  revenue_cpcv: Boolean
  revenue_cpview: Boolean
  revenue_cpvisit: Boolean
  revenue_cpl: Boolean
  revenue_cpa: Boolean
  revenue_cpi: Boolean
  revenue_cps: Boolean
  video_campaign: Boolean
  video_startDate: AWSDate
  video_endDate: AWSDate
  video_unitRate: Float
  video_goal: Int
  video_budget: Float
  video_revType: String
  display_campaign: Boolean
  display_startDate: AWSDate
  display_endDate: AWSDate
  display_unitRate: Float
  display_goal: Int
  display_budget: Float
  display_revType: String
  native_campaign: Boolean
  native_startDate: AWSDate
  native_endDate: AWSDate
  native_unitRate: Float
  native_goal: Int
  native_budget: Float
  native_revType: String
  search_campaign: Boolean
  search_startDate: AWSDate
  search_endDate: AWSDate
  search_unitRate: Float
  search_goal: Int
  search_budget: Float
  search_revType: String
  social_campaign: Boolean
  social_startDate: AWSDate
  social_endDate: AWSDate
  social_unitRate: Float
  social_goal: Int
  social_budget: Float
  social_revType: String
  highImpact_campaign: Boolean
  highImpact_startDate: AWSDate
  highImpact_endDate: AWSDate
  highImpact_unitRate: Float
  highImpact_goal: Int
  highImpact_budget: Float
  highImpact_revType: String
  richMedia_campaign: Boolean
  richMedia_startDate: AWSDate
  richMedia_endDate: AWSDate
  richMedia_unitRate: Float
  richMedia_goal: Int
  richMedia_budget: Float
  nativrichMedia_revType: String
  pop_campaign: Boolean
  pop_startDate: AWSDate
  pop_endDate: AWSDate
  pop_unitRate: Float
  pop_goal: Int
  pop_budget: Float
  pop_revType: String
  push_campaign: Boolean
  push_startDate: AWSDate
  push_endDate: AWSDate
  push_unitRate: Float
  push_goal: Int
  push_budget: Float
  push_revType: String
  BO_file: String
  clientName: String
  platforms: [String]
}

type Client @model @auth(rules: [{allow: groups, groups: ["admin"], operations: [read, create, update, delete]}, {allow: groups, groups: ["adops"], operations: [read, create, update, delete]}, {allow: groups, groups: ["sales"], operations: [read, update]}]) {
  id: ID!
  name: String
  client_type: String
  country: String
  address: String
  website: AWSURL
  non_person_email: AWSEmail
  billing_contact_name: String
  billing_contact_email: AWSEmail
  tax_id: String
  main_contact_name: String
  main_contact_email: AWSEmail
  main_contact_phone: AWSPhone
  skype_or_gmeet: String
  sales_manager_email: AWSEmail
  account_manager: String
  kickback_type: String
  kickback_value: String
  billing_entity: String
  date_created: AWSDate
  date_modified: AWSDate
  Campaigns: [Campaign] @connection(keyName: "byClient", fields: ["id"])
}
 